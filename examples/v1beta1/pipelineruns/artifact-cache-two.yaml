apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: artifact-cache-
spec:
  workspaces:
    - name: artifact-cache
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 16Mi
          volumeMode: Filesystem
    - name: artifact1
      emptyDir: {}
    - name: artifact2
      emptyDir: {}
    - name: artifact3
      emptyDir: {}
    - name: artifact4
      emptyDir: {}
  pipelineSpec:
    results:
      - name: artifact1
        value: $(tasks.check-artifact1.results.artifact)
      - name: artifact1-updated
        value: $(tasks.check-updated-artifact1.results.artifact)
    tasks:
    - name: produce-artifact1
      taskSpec:
        steps:
        - name: create-artifact1
          image: ubuntu
          script: |
            mkdir $(workspaces.artifact1.path)/demos
            cd $(workspaces.artifact1.path)/demos
            echo "this is artifact1" > foo.txt
            chmod 777 $(workspaces.artifact-cache.path)
        - name: cache-artifact1
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2
          script: |
            cd $(workspaces.artifact1.path)
            cp -r demos $(workspaces.artifact-cache.path)
            cd $(workspaces.artifact-cache.path)/demos
            git init
            git config --global user.email "tekton.dev"
            git config --global user.name "tekton-pipelines"
            git checkout -b produce-artifact1
            git add .
            git commit -m "cache after task fetch-source-code"
    - name: update-artifact1
      runAfter:
        - produce-artifact1
      taskSpec:
        steps:
        - name: load-artifact-from-cache 
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2
          script: |
            cd $(workspaces.artifact-cache.path)/demos
            git checkout produce-artifact1
            cd ..
            cp -r demos $(workspaces.artifact2.path)/demos
        - name: update-artifact
          image: ubuntu
          script: |
            cd $(workspaces.artifact2.path)/demos
            echo "this is updated artifact1" > foo.txt
        - name: update-artifact1-cache
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2
          script: |
            cd $(workspaces.artifact2.path)
            cp -r demos $(workspaces.artifact-cache.path)
            cd $(workspaces.artifact-cache.path)/demos
            git config --global user.email "tekton.dev"
            git config --global user.name "tekton-pipelines"
            git checkout -b update-artifact1
            git add .
            git commit -m "cache after task run-tests"
    - name: check-artifact1
      runAfter:
        - update-artifact1
      taskSpec:
        results:
          - name: artifact
        steps:
        - name: load-artifact1-from-cache 
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2
          script: |
            cd $(workspaces.artifact-cache.path)/demos
            git checkout produce-artifact1
            cd ..
            cp -r demos $(workspaces.artifact3.path)/demos
        - name: print-artifact1
          image: ubuntu
          script: |
            cat $(workspaces.artifact3.path)/demos/foo.txt | tee $(results.artifact.path)
    - name: check-updated-artifact1
      runAfter:
        - check-artifact1
      taskSpec:
        results:
          - name: artifact
        steps:
        - name: load-artifact2-from-cache 
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2
          script: |
            cd $(workspaces.artifact-cache.path)/demos
            git checkout update-artifact1
            cd ..
            cp -r demos $(workspaces.artifact4.path)/demos
        - name: print-artifact2
          image: ubuntu
          script: |
            cat $(workspaces.artifact4.path)/demos/foo.txt | tee $(results.artifact.path)
             
